#include "uSE_Mesh.h"


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
uSE_Mesh::uSE_Mesh()
{
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
uSE_Mesh::~uSE_Mesh()
{
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void uSE_Mesh::add_vertex(const uSE_Vertex & inVertex)
{
    m_vertices.push_back(inVertex);
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void uSE_Mesh::add_triangle(const uSE_Triangle & inTriangle)
{
    m_triangles.push_back(inTriangle);
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void uSE_Mesh::add_weight(const uSE_Weight & inWeight )
{
    m_weights.push_back(inWeight);
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
std::string uSE_Mesh::getShaderName()
{
    return m_shader_name;
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
unsigned int uSE_Mesh::getVerticesCount()
{
    return m_vertices.size();
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
uSE_Vertex uSE_Mesh::getVertexAtIndex( int inIndex )
{
    return m_vertices.at(inIndex);
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
unsigned int uSE_Mesh::getTrianglesCount()
{
    return m_triangles.size();
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
uSE_Triangle uSE_Mesh::getTriangleAtIndex( int inIndex )
{
    return m_triangles.at(inIndex);
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
unsigned int uSE_Mesh::getWeightsCount()
{
    return m_weights.size();
}


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
uSE_Weight uSE_Mesh::getWeightAtIndex( int inIndex )
{
    return m_weights.at(inIndex);
}
